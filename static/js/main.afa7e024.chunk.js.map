{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","updateCredentials","bind","logout","start_screen","credentials","getSavedCredentials","undefined","state","hosts","screen","this","remember","saveCredentials","setState","refreshHosts","then","base_uri","localStorage","getItem","api_key","removeItem","setItem","clearSavedCredentials","window","location","reload","fetch","headers","Authorization","response","json","data","screens","call","React","Component","login","onSubmit","loading","className","Object","entries","map","name","info","host","onClick","Host","host_url","href","ip","ipv4","ipv6","IPInfo","address","last_ping","Date","toISOString","split","last_change","cf_dns_record_id","ConnectForm","handleChange","handleSubmit","event","target","value","type","checked","preventDefault","htmlFor","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afa7e024.chunk.js","sourcesContent":["import \"./App.scss\";\nimport React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCredentials = this.updateCredentials.bind(this);\n    this.logout = this.logout.bind(this);\n\n    let start_screen = \"login\";\n\n    const credentials = this.getSavedCredentials();\n    if (credentials !== undefined) {\n      start_screen = \"loading\";\n    }\n\n    this.state = {\n      hosts: null,\n      screen: start_screen,\n      credentials: credentials,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.screen === \"loading\") {\n      this.updateCredentials(this.state.credentials);\n    }\n  }\n\n  updateCredentials(credentials) {\n    if (credentials.remember) {\n      this.saveCredentials(credentials);\n    }\n\n    this.setState(\n      (state, props) => ({ credentials: credentials, screen: \"loading\" }),\n      () => {\n        this.refreshHosts().then(() => {\n          this.setState({ screen: \"hosts\" });\n        });\n      }\n    );\n  }\n\n  getSavedCredentials() {\n    const base_uri = localStorage.getItem(\"base_uri\");\n    const api_key = localStorage.getItem(\"api_key\");\n\n    if (base_uri === null || api_key === null) {\n      return undefined;\n    }\n\n    return {\n      base_uri: base_uri,\n      api_key: api_key,\n      remember: true,\n    };\n  }\n\n  clearSavedCredentials() {\n    localStorage.removeItem(\"base_uri\");\n    localStorage.removeItem(\"api_key\");\n  }\n\n  saveCredentials(credentials) {\n    localStorage.setItem(\"base_uri\", credentials.base_uri);\n    localStorage.setItem(\"api_key\", credentials.api_key);\n  }\n\n  logout() {\n    this.clearSavedCredentials();\n    window.location.reload(true);\n  }\n\n  refreshHosts() {\n    return fetch(\n      `${this.state.credentials.base_uri}/hosts?show_ipv4=true&show_ipv6=true`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.state.credentials.api_key}`,\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ hosts: data.hosts });\n      });\n  }\n\n  render() {\n    return screens[this.state.screen].call(this);\n  }\n}\n\nconst screens = {\n  login: function () {\n    return <ConnectForm onSubmit={this.updateCredentials} />;\n  },\n  loading: function () {\n    return <p className=\"loading\">Loading...</p>;\n  },\n\n  hosts: function () {\n    const hosts = Object.entries(this.state.hosts).map(([name, info]) => (\n      <Host host={{ name: name, ...info }} key={name} />\n    ));\n    return (\n      <div>\n        <div className=\"navbar\">\n          <button onClick={this.logout}>Logout</button>\n        </div>\n        <div className=\"content\">\n          <table className=\"host-table\">\n            <thead>\n              <tr>\n                <th>Host</th>\n                <th>IPv4</th>\n                <th>IPv6</th>\n              </tr>\n            </thead>\n            <tbody>{hosts}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  },\n};\n\nconst Host = (props) => {\n  const host_url = `https://${props.host.name}`;\n  return (\n    <tr>\n      <td className=\"host-name\">\n        <a href={host_url}>{props.host.name}</a>\n      </td>\n      <IPInfo ip={props.host.ipv4} />\n      <IPInfo ip={props.host.ipv6} />\n    </tr>\n  );\n};\n\nconst IPInfo = (props) => (\n  <td className=\"ip-info\">\n    <table className=\"ip-info\">\n      <tbody>\n        <tr>\n          <th></th>\n          <td className=\"ip\">{props.ip.address}</td>\n        </tr>\n        <tr\n          className={\n            props.ip.last_ping !== _get_current_date_string()\n              ? \"warning\"\n              : undefined\n          }\n        >\n          <th>Last ping</th>\n          <td> {props.ip.last_ping}</td>\n        </tr>\n        <tr>\n          <th>Last change</th>\n          <td>{props.ip.last_change}</td>\n        </tr>\n        <tr>\n          <th>Record ID</th>\n          <td>{props.ip.cf_dns_record_id}</td>\n        </tr>\n      </tbody>\n    </table>\n  </td>\n);\n\nfunction _get_current_date_string() {\n  return new Date().toISOString().split(\"T\")[0];\n}\n\nclass ConnectForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { base_uri: \"\", api_key: \"\", remember: false };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onSubmit = props.onSubmit;\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setState({ [target.name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.onSubmit(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"login-container\">\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"base_uri\">Base URI</label>\n          <input\n            name=\"base_uri\"\n            type=\"text\"\n            value={this.state.base_uri}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"api_key\">API Key</label>\n          <input\n            name=\"api_key\"\n            type=\"password\"\n            value={this.state.api_key}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"remember\">\n            <input\n              name=\"remember\"\n              type=\"checkbox\"\n              value={this.state.remember}\n              onChange={this.handleChange}\n            />\n            Remember me\n          </label>\n          <button type=\"submit\">Connect</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}
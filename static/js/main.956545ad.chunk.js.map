{"version":3,"sources":["Hosts.js","ConnectForm.js","App.js","reportWebVitals.js","index.js"],"names":["Host","props","host_url","host","name","className","href","ip","ipv4","enabled","ipv4_enabled","type","ipv6","ipv6_enabled","IPInfo","td_class","cell_content","address","last_ping","Date","toISOString","split","undefined","last_change","cf_dns_record_id","class","Hosts","hosts","Object","entries","map","info","onClick","onLogout","LOGIN_ERROR_DESC","is_uri_insecure","uri","startsWith","ConnectForm","state","base_uri","api_key","remember","error","handleChange","bind","handleSubmit","onSubmit","event","target","value","checked","this","setState","preventDefault","console","log","error_text","htmlFor","onChange","React","Component","App","updateCredentials","logout","start_screen","credentials","getSavedCredentials","screen","login_error","saveCredentials","refreshHosts","then","ok","localStorage","getItem","removeItem","setItem","clearSavedCredentials","window","location","reload","fetch","headers","Authorization","r","status","json","catch","data","screens","call","login","loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.956545ad.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Hosts = (props) => {\n  const hosts = Object.entries(props.hosts).map(([name, info]) => (\n    <Host host={{ name: name, ...info }} key={name} />\n  ));\n  return (\n    <div>\n      <div className=\"navbar\">\n        <button onClick={props.onLogout}>Logout</button>\n      </div>\n      <div className=\"content\">\n        <table className=\"host-table\">\n          <thead>\n            <tr>\n              <th>Host</th>\n              <th>IPv4</th>\n              <th>IPv6</th>\n            </tr>\n          </thead>\n          <tbody>{hosts}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nconst Host = (props) => {\n  const host_url = `https://${props.host.name}`;\n  return (\n    <tr>\n      <td className=\"host-name\">\n        <a href={host_url}>{props.host.name}</a>\n      </td>\n      <IPInfo\n        ip={props.host.ipv4}\n        enabled={props.host.ipv4_enabled}\n        type=\"ipv4\"\n      />\n      <IPInfo\n        ip={props.host.ipv6}\n        enabled={props.host.ipv6_enabled}\n        type=\"ipv6\"\n      />\n    </tr>\n  );\n};\n\nconst IPInfo = (props) => {\n  const td_class = `ip-info type-${props.type}`;\n  const cell_content = props.enabled ? (\n    <table className=\"ip-info\">\n      <tbody>\n        <tr>\n          <th></th>\n          <td className=\"ip\">{props.ip.address}</td>\n        </tr>\n        <tr\n          className={\n            props.ip.last_ping !== _get_current_date_string()\n              ? \"warning\"\n              : undefined\n          }\n        >\n          <th>Last ping</th>\n          <td> {props.ip.last_ping}</td>\n        </tr>\n        <tr>\n          <th>Last change</th>\n          <td>{props.ip.last_change}</td>\n        </tr>\n        <tr>\n          <th>Record ID</th>\n          <td>{props.ip.cf_dns_record_id}</td>\n        </tr>\n      </tbody>\n    </table>\n  ) : (\n    <span class=\"disabled\">Disabled</span>\n  );\n  return <td className={td_class}>{cell_content}</td>;\n};\n\nfunction _get_current_date_string() {\n  return new Date().toISOString().split(\"T\")[0];\n}\n\nexport default Hosts;\n","import React from \"react\";\n\nconst LOGIN_ERROR_DESC = {\n  \"authentication-error\": \"Authentication error.\",\n  \"network-error\": \"Could not reach service.\",\n  \"insecure-service-error\": \"Insecure service. Refusing to connect.\",\n};\n\nexport class ConnectForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      base_uri: \"\",\n      api_key: \"\",\n      remember: false,\n      error: props.error,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onSubmit = props.onSubmit;\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n\n    let error = null;\n    if (target.name === \"base_uri\" && is_uri_insecure(value)) {\n      error = \"insecure-service-error\";\n    }\n\n    this.setState({ [target.name]: value, error: error });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (is_uri_insecure(this.state.base_uri)) {\n      return;\n    }\n\n    this.onSubmit(this.state);\n  }\n\n  render() {\n    let error = \"\";\n    if (this.state.error !== null) {\n      console.log(\"error\", this.state.error);\n      let error_text = LOGIN_ERROR_DESC[this.state.error];\n      if (error_text === undefined) {\n        error_text = \"Error.\";\n      }\n\n      error = <div className=\"error\">ðŸ›‘ {error_text}</div>;\n    }\n\n    return (\n      <div className=\"login-container\">\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"base_uri\">Base URI</label>\n          <input\n            name=\"base_uri\"\n            type=\"text\"\n            value={this.state.base_uri}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"api_key\">API Key</label>\n          <input\n            name=\"api_key\"\n            type=\"password\"\n            value={this.state.api_key}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"remember\">\n            <input\n              name=\"remember\"\n              type=\"checkbox\"\n              value={this.state.remember}\n              onChange={this.handleChange}\n            />\n            Remember me\n          </label>\n          <button type=\"submit\">Connect</button>\n          {error}\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction is_uri_insecure(uri) {\n  return uri.startsWith(\"http:\");\n}\n\nexport default ConnectForm;\n","import \"./App.scss\";\nimport Hosts from \"./Hosts.js\";\nimport ConnectForm from \"./ConnectForm.js\";\nimport React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCredentials = this.updateCredentials.bind(this);\n    this.logout = this.logout.bind(this);\n\n    let start_screen = \"login\";\n\n    const credentials = this.getSavedCredentials();\n    if (credentials !== undefined) {\n      start_screen = \"loading\";\n    }\n\n    this.state = {\n      hosts: null,\n      screen: start_screen,\n      credentials: credentials,\n      login_error: null,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.screen === \"loading\") {\n      this.updateCredentials(this.state.credentials);\n    }\n  }\n\n  updateCredentials(credentials) {\n    if (credentials.remember) {\n      this.saveCredentials(credentials);\n    }\n\n    this.setState(\n      (state, props) => ({ credentials: credentials, screen: \"loading\" }),\n      () => {\n        this.refreshHosts().then((ok) => {\n          if (ok) {\n            this.setState({ screen: \"hosts\" });\n          }\n        });\n      }\n    );\n  }\n\n  getSavedCredentials() {\n    const base_uri = localStorage.getItem(\"base_uri\");\n    const api_key = localStorage.getItem(\"api_key\");\n\n    if (base_uri === null || api_key === null) {\n      return undefined;\n    }\n\n    return {\n      base_uri: base_uri,\n      api_key: api_key,\n      remember: true,\n    };\n  }\n\n  clearSavedCredentials() {\n    localStorage.removeItem(\"base_uri\");\n    localStorage.removeItem(\"api_key\");\n  }\n\n  saveCredentials(credentials) {\n    localStorage.setItem(\"base_uri\", credentials.base_uri);\n    localStorage.setItem(\"api_key\", credentials.api_key);\n  }\n\n  logout() {\n    this.clearSavedCredentials();\n    window.location.reload(true);\n  }\n\n  refreshHosts() {\n    return fetch(\n      `${this.state.credentials.base_uri}/hosts?show_ipv4=true&show_ipv6=true`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.state.credentials.api_key}`,\n        },\n      }\n    )\n      .then((r) => {\n        if (r.status === 401) {\n          this.setState({\n            login_error: \"authentication-error\",\n            screen: \"login\",\n          });\n          return null;\n        }\n        return r.json();\n      })\n      .catch((error) => {\n        this.setState({ login_error: \"network-error\", screen: \"login\" });\n        return null;\n      })\n      .then((data) => {\n        if (data !== null) {\n          this.setState({ hosts: data.hosts });\n          return true;\n        }\n\n        return false;\n      });\n  }\n\n  render() {\n    return screens[this.state.screen].call(this);\n  }\n}\n\nconst screens = {\n  login: function () {\n    return (\n      <ConnectForm\n        onSubmit={this.updateCredentials}\n        error={this.state.login_error}\n      />\n    );\n  },\n  loading: function () {\n    return <p className=\"loading\">Loading...</p>;\n  },\n\n  hosts: function () {\n    return <Hosts onLogout={this.logout} hosts={this.state.hosts} />;\n  },\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}